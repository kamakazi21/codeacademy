We need to supply the <form> element with both the location of where the <form>‘s information goes and what HTTP request to make
<form action="/example.html" method="POST">
</form>
the action attribute determines where the information is sent and 
the method attribute is assigned a HTTP verb that is included in the HTTP request.
The <input> element has a type attribute which determines how it renders on the web page and what kind of data it can accept.
input has attributes type and name
Type attribute which determines how it renders on the web page and what kind of data it can accept.
<input type="text" name="first-text-field"> 
After users type into the <input> element, the value of the value attribute becomes what is typed into the text field.
The value of the value attribute is paired with the value of the name attribute and sent as text when the form is submitted
The <label> element has an opening and closing tag and displays text that is written between the opening and closing tags.
To associate a <label> and an <input>, the <input> needs an id attribute. 
We then assign the for attribute of the <label> element with the value of the id attribute of <input>, like so: 
<label for="meal">What do you want to eat?</label>
An <input type ="password"> element will replace input text with another character like an asterisk (*) or a dot (•). 
By setting type="number" for an <input> we can restrict what users type into the input field to just numbers
We can also provide a step attribute which creates arrows inside the input field to increase or decrease by the value of the step attribute
